<Window x:Class="GanttChartDataGridBarTemplatingSample.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:pdgcc="clr-namespace:DlhSoft.Windows.Controls;assembly=DlhSoft.ProjectData.GanttChart.LightWPF.Controls"
        xmlns:local="clr-namespace:GanttChartDataGridBarTemplatingSample"
        Title="GanttChartDataGrid Bar Templating Sample" Width="800" Height="600">
    <DockPanel>
        <pdgcc:GanttChartDataGrid x:Name="GanttChartDataGrid" StandardBarCornerRadius="1" IsMouseWheelZoomEnabled="False">
            <!-- Define the custom bar template for standard tasks. -->
            <pdgcc:GanttChartDataGrid.StandardTaskTemplate>
                <DataTemplate>
                    <Grid>
                        <!-- Display a new estimation bar at the position computed based on custom EstimatedStart property and bar left (Start) origin. -->
                        <Canvas Opacity="0.35">
                            <Grid Canvas.Left="{Binding ComputedEstimatedBarLeft}" Canvas.Top="-4" Width="{Binding ComputedEstimatedBarWidth}" Height="{Binding ComputedBarHeight}">
                                <Rectangle Fill="{Binding Path=(pdgcc:GanttChartView.StandardBarFill)}" Stroke="{Binding Path=(pdgcc:GanttChartView.StandardBarStroke)}" StrokeThickness="{Binding GanttChartView.StandardBarStrokeThickness}" RadiusX="{Binding GanttChartView.StandardBarCornerRadius}" RadiusY="{Binding GanttChartView.StandardBarCornerRadius}"/>
                                <Rectangle Margin="1" Stroke="LightCyan" StrokeThickness="1" RadiusX="{Binding GanttChartView.StandardBarCornerRadius}" RadiusY="{Binding GanttChartView.StandardBarCornerRadius}"/>
                            </Grid>
                        </Canvas>
                        <Grid>
                            <!-- A dashed rectangle can be used to present the task area. -->
                            <Rectangle Stroke="{Binding Path=(pdgcc:GanttChartView.StandardBarStroke)}" StrokeThickness="{Binding GanttChartView.StandardBarStrokeThickness}" StrokeDashArray="2" RadiusX="{Binding GanttChartView.StandardBarCornerRadius}" RadiusY="{Binding GanttChartView.StandardBarCornerRadius}"/>
                            <!-- An items control can be used to display the custom interrupted task bars in the chart. -->
                            <ItemsControl ItemsSource="{Binding ComputedInterruptedBars}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Canvas>
                                            <Grid Canvas.Left="{Binding Left}" Width="{Binding Width}" Height="14">
                                                <!-- Corner radius values are set to a small value to generate less rounded rectangle corners. -->
                                                <Rectangle Fill="{Binding Path=Item.(pdgcc:GanttChartView.StandardBarFill)}" Stroke="{Binding Path=Item.(pdgcc:GanttChartView.StandardBarStroke)}" StrokeThickness="{Binding GanttChartView.StandardBarStrokeThickness}" RadiusX="{Binding GanttChartView.StandardBarCornerRadius}" RadiusY="{Binding GanttChartView.StandardBarCornerRadius}"/>
                                                <!-- Add a light cyan effect rectangle inside the task bar. -->
                                                <Rectangle Margin="1" Stroke="LightCyan" StrokeThickness="1" RadiusX="{Binding GanttChartView.StandardBarCornerRadius}" RadiusY="{Binding GanttChartView.StandardBarCornerRadius}"/>
                                            </Grid>
                                        </Canvas>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <pdgcc:DragTaskThumb Role="UpdateStart" Visibility="{Binding GanttChartView.ThumbVisibility}"/>
                            <pdgcc:DragTaskThumb Role="UpdateFinish" Width="2" HorizontalAlignment="Right" Visibility="{Binding GanttChartView.ThumbVisibility}"/>
                        </Grid>
                        <StackPanel Orientation="Horizontal" Margin="3,1">
                            <!-- An image can be used to display the custom icon on the task bar in the chart. -->
                            <Image Grid.Column="0" Source="{Binding Icon}" IsHitTestVisible="False"/>
                            <!-- A text box can be used to display and edit the name of the task on the task bar in the chart. -->
                            <TextBox Grid.Column="1" Text="{Binding Content, Mode=TwoWay}" FontFamily="Arial" FontSize="7" Foreground="White" Background="#80000000" BorderThickness="0"/>
                        </StackPanel>
                        <!-- An items control can be used to display the custom markers over the task bar in the chart. -->
                        <ItemsControl ItemsSource="{Binding Markers}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Canvas>
                                        <Image Canvas.Left="{Binding ComputedLeft}" Source="{Binding Icon}" ToolTipService.ToolTip="{Binding Note}" Height="14"/>
                                    </Canvas>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <!-- A text block can be used to display the custom note under the task bar in the chart. -->
                        <Canvas>
                            <TextBlock Canvas.Top="14" Text="{Binding Note}" FontFamily="Arial" FontStyle="Italic" FontSize="7" Foreground="Gray"/>
                        </Canvas>
                    </Grid>
                </DataTemplate>
            </pdgcc:GanttChartDataGrid.StandardTaskTemplate>
            <pdgcc:GanttChartDataGrid.Items>
                <!-- Use a custom item that inherits from GanttChartItem (see code behind). -->
                <!-- Some item properties are set in code behind. -->
                <local:CustomGanttChartItem Content="Task 1"/>
                <local:CustomGanttChartItem Content="Task 1.1" Indentation="1"/>
                <local:CustomGanttChartItem Content="Task 1.2" Indentation="1"/>
                <local:CustomGanttChartItem Content="Task 2"/>
                <local:CustomGanttChartItem Content="Task 2.1" Indentation="1"/>
                <local:CustomGanttChartItem Content="Task 2.2" Indentation="1"/>
                <local:CustomGanttChartItem Content="Task 2.2.1" Indentation="2"/>
                <local:CustomGanttChartItem Content="Task 2.2.2" Indentation="2"/>
            </pdgcc:GanttChartDataGrid.Items>
        </pdgcc:GanttChartDataGrid>
    </DockPanel>
</Window>

//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DatabaseModel", "Tasks_PredecessorHosts", "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GanttChartDataGridDatabaseSample.Task), "Predecessor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GanttChartDataGridDatabaseSample.Predecessor), true)]
[assembly: EdmRelationshipAttribute("DatabaseModel", "Tasks_Predecessors", "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GanttChartDataGridDatabaseSample.Task), "Predecessor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GanttChartDataGridDatabaseSample.Predecessor), true)]

#endregion

namespace GanttChartDataGridDatabaseSample
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DatabaseEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DatabaseEntities object using the connection string found in the 'DatabaseEntities' section of the application configuration file.
        /// </summary>
        public DatabaseEntities() : base("name=DatabaseEntities", "DatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DatabaseEntities object.
        /// </summary>
        public DatabaseEntities(string connectionString) : base(connectionString, "DatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DatabaseEntities object.
        /// </summary>
        public DatabaseEntities(EntityConnection connection) : base(connection, "DatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Predecessor> Predecessors
        {
            get
            {
                if ((_Predecessors == null))
                {
                    _Predecessors = base.CreateObjectSet<Predecessor>("Predecessors");
                }
                return _Predecessors;
            }
        }
        private ObjectSet<Predecessor> _Predecessors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Task> Tasks
        {
            get
            {
                if ((_Tasks == null))
                {
                    _Tasks = base.CreateObjectSet<Task>("Tasks");
                }
                return _Tasks;
            }
        }
        private ObjectSet<Task> _Tasks;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Predecessors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPredecessors(Predecessor predecessor)
        {
            base.AddObject("Predecessors", predecessor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tasks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTasks(Task task)
        {
            base.AddObject("Tasks", task);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="Predecessor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Predecessor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Predecessor object.
        /// </summary>
        /// <param name="dependentTaskID">Initial value of the DependentTaskID property.</param>
        /// <param name="predecessorTaskID">Initial value of the PredecessorTaskID property.</param>
        /// <param name="dependencyType">Initial value of the DependencyType property.</param>
        public static Predecessor CreatePredecessor(global::System.Int32 dependentTaskID, global::System.Int32 predecessorTaskID, global::System.Int32 dependencyType)
        {
            Predecessor predecessor = new Predecessor();
            predecessor.DependentTaskID = dependentTaskID;
            predecessor.PredecessorTaskID = predecessorTaskID;
            predecessor.DependencyType = dependencyType;
            return predecessor;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DependentTaskID
        {
            get
            {
                return _DependentTaskID;
            }
            set
            {
                if (_DependentTaskID != value)
                {
                    OnDependentTaskIDChanging(value);
                    ReportPropertyChanging("DependentTaskID");
                    _DependentTaskID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DependentTaskID");
                    OnDependentTaskIDChanged();
                }
            }
        }
        private global::System.Int32 _DependentTaskID;
        partial void OnDependentTaskIDChanging(global::System.Int32 value);
        partial void OnDependentTaskIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PredecessorTaskID
        {
            get
            {
                return _PredecessorTaskID;
            }
            set
            {
                if (_PredecessorTaskID != value)
                {
                    OnPredecessorTaskIDChanging(value);
                    ReportPropertyChanging("PredecessorTaskID");
                    _PredecessorTaskID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PredecessorTaskID");
                    OnPredecessorTaskIDChanged();
                }
            }
        }
        private global::System.Int32 _PredecessorTaskID;
        partial void OnPredecessorTaskIDChanging(global::System.Int32 value);
        partial void OnPredecessorTaskIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DependencyType
        {
            get
            {
                return _DependencyType;
            }
            set
            {
                OnDependencyTypeChanging(value);
                ReportPropertyChanging("DependencyType");
                _DependencyType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DependencyType");
                OnDependencyTypeChanged();
            }
        }
        private global::System.Int32 _DependencyType;
        partial void OnDependencyTypeChanging(global::System.Int32 value);
        partial void OnDependencyTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "Tasks_PredecessorHosts", "Task")]
        public Task DependentTask
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("DatabaseModel.Tasks_PredecessorHosts", "Task").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("DatabaseModel.Tasks_PredecessorHosts", "Task").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Task> DependentTaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("DatabaseModel.Tasks_PredecessorHosts", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Task>("DatabaseModel.Tasks_PredecessorHosts", "Task", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "Tasks_Predecessors", "Task")]
        public Task Task
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("DatabaseModel.Tasks_Predecessors", "Task").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("DatabaseModel.Tasks_Predecessors", "Task").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Task> TaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("DatabaseModel.Tasks_Predecessors", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Task>("DatabaseModel.Tasks_Predecessors", "Task", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="Task")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Task : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Task object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="index">Initial value of the Index property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="indentation">Initial value of the Indentation property.</param>
        /// <param name="start">Initial value of the Start property.</param>
        /// <param name="finish">Initial value of the Finish property.</param>
        /// <param name="completion">Initial value of the Completion property.</param>
        /// <param name="isMilestone">Initial value of the IsMilestone property.</param>
        /// <param name="assignments">Initial value of the Assignments property.</param>
        public static Task CreateTask(global::System.Int32 id, global::System.Int32 index, global::System.String name, global::System.Int32 indentation, global::System.DateTime start, global::System.DateTime finish, global::System.DateTime completion, global::System.Boolean isMilestone, global::System.String assignments)
        {
            Task task = new Task();
            task.ID = id;
            task.Index = index;
            task.Name = name;
            task.Indentation = indentation;
            task.Start = start;
            task.Finish = finish;
            task.Completion = completion;
            task.IsMilestone = isMilestone;
            task.Assignments = assignments;
            return task;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Index
        {
            get
            {
                return _Index;
            }
            set
            {
                OnIndexChanging(value);
                ReportPropertyChanging("Index");
                _Index = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Index");
                OnIndexChanged();
            }
        }
        private global::System.Int32 _Index;
        partial void OnIndexChanging(global::System.Int32 value);
        partial void OnIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Indentation
        {
            get
            {
                return _Indentation;
            }
            set
            {
                OnIndentationChanging(value);
                ReportPropertyChanging("Indentation");
                _Indentation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Indentation");
                OnIndentationChanged();
            }
        }
        private global::System.Int32 _Indentation;
        partial void OnIndentationChanging(global::System.Int32 value);
        partial void OnIndentationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Start
        {
            get
            {
                return _Start;
            }
            set
            {
                OnStartChanging(value);
                ReportPropertyChanging("Start");
                _Start = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Start");
                OnStartChanged();
            }
        }
        private global::System.DateTime _Start;
        partial void OnStartChanging(global::System.DateTime value);
        partial void OnStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Finish
        {
            get
            {
                return _Finish;
            }
            set
            {
                OnFinishChanging(value);
                ReportPropertyChanging("Finish");
                _Finish = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Finish");
                OnFinishChanged();
            }
        }
        private global::System.DateTime _Finish;
        partial void OnFinishChanging(global::System.DateTime value);
        partial void OnFinishChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Completion
        {
            get
            {
                return _Completion;
            }
            set
            {
                OnCompletionChanging(value);
                ReportPropertyChanging("Completion");
                _Completion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Completion");
                OnCompletionChanged();
            }
        }
        private global::System.DateTime _Completion;
        partial void OnCompletionChanging(global::System.DateTime value);
        partial void OnCompletionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsMilestone
        {
            get
            {
                return _IsMilestone;
            }
            set
            {
                OnIsMilestoneChanging(value);
                ReportPropertyChanging("IsMilestone");
                _IsMilestone = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsMilestone");
                OnIsMilestoneChanged();
            }
        }
        private global::System.Boolean _IsMilestone;
        partial void OnIsMilestoneChanging(global::System.Boolean value);
        partial void OnIsMilestoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Assignments
        {
            get
            {
                return _Assignments;
            }
            set
            {
                OnAssignmentsChanging(value);
                ReportPropertyChanging("Assignments");
                _Assignments = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Assignments");
                OnAssignmentsChanged();
            }
        }
        private global::System.String _Assignments;
        partial void OnAssignmentsChanging(global::System.String value);
        partial void OnAssignmentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "Tasks_PredecessorHosts", "Predecessor")]
        public EntityCollection<Predecessor> Predecessors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Predecessor>("DatabaseModel.Tasks_PredecessorHosts", "Predecessor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Predecessor>("DatabaseModel.Tasks_PredecessorHosts", "Predecessor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "Tasks_Predecessors", "Predecessor")]
        public EntityCollection<Predecessor> Successors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Predecessor>("DatabaseModel.Tasks_Predecessors", "Predecessor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Predecessor>("DatabaseModel.Tasks_Predecessors", "Predecessor", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
